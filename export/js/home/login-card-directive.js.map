{"version":3,"names":[],"mappings":"","sources":["home/login-card-directive.js"],"sourcesContent":["/* global Firebase */\n(function () {\n  'use strict';\n\n  /**\n   * @ngdoc directive\n   * @name home.directive:loginCard\n   * @restrict EA\n   * @element\n   *\n   * @description\n   *\n   * @example\n     <example module=\"home\">\n       <file name=\"index.html\">\n        <login-card></login-card>\n       </file>\n     </example>\n   *\n   */\n  angular\n    .module('home')\n    .directive('loginCard', loginCard);\n\n  function loginCard() {\n    return {\n      restrict: 'EA',\n      scope: {\n        name: '=',\n        loggedIn: '='\n      },\n      bindToController: true,\n      templateUrl: 'home/login-card-directive.tpl.html',\n      controllerAs: 'loginCard',\n      controller: function ($firebaseArray, md5) {\n        var vm = this,\n            ref = new Firebase('https://amigo-secreto.firebaseio.com');\n\n        vm.users = $firebaseArray(ref);\n\n        if (vm.name === null) {\n          vm.name = '';\n        }\n        vm.enabled = true;\n        vm.view1 = true;\n        vm.nameInput = nameInput;\n        vm.cancel = cancel;\n        vm.proceed = proceed;\n        vm.dismiss = dismiss;\n        vm.changePassword = changePassword;\n        vm.login = login;\n        vm.logout = logout;\n        vm.savePassword = savePassword;\n        vm.loggedIn = false;\n\n        function nameInput() {\n          vm.view1 = false;\n          vm.loading = true;\n          $isUserRegistered(vm.name, function () {\n            vm.loading = false;\n            vm.view3 = true;\n            vm.password = '';\n          }, function () {\n            vm.loading = false;\n            vm.view2 = true;\n          });\n        }\n\n        function $isUserRegistered(name, callback1, callback2) {\n          ref.child(name).child('isRegistered').once('value', function (snapshot) {\n            var isRegistered = snapshot.val();\n            if (isRegistered) {\n              callback1();\n            } else {\n              callback2();\n            }\n          });\n        }\n\n        function $registerUser(name, callback) {\n          ref.child(name).child('isRegistered').set(true, callback);\n        }\n\n        function cancel() {\n          vm.view1 = true;\n          vm.view2 = false;\n          vm.view3 = false;\n          vm.wrongPasswordError = false;\n        }\n\n        function proceed() {\n          var hash;\n          vm.loading = true;\n          $registerUser(vm.name, function () {\n            $suggestedPassword(vm.name, function (pass) {\n              vm.suggestedPassword = pass;\n              vm.password = pass;\n              hash = md5.createHash(pass || '');\n              $savePassword(vm.name, hash, function () {\n                vm.loading = false;\n                vm.view2 = false;\n                vm.view5 = false;\n                vm.view4 = true;\n              });\n            });\n          });\n        }\n\n        function $suggestedPassword(name, callback) {\n          ref.child(name).child('suggestedPassword').once('value', function (snapshot) {\n            var suggestedPassword = snapshot.val();\n            callback(suggestedPassword);\n          });\n        }\n\n        function changePassword() {\n          vm.newPassword = '';\n          vm.repeatPassword = '';\n          vm.passwordError = false;\n          vm.view4 = false;\n          vm.view5 = true;\n        }\n\n        function login() {\n          $login(vm.name, vm.password, function () {\n            console.log(vm.name + vm.password);\n            dismiss();\n            $dismiss();\n          });\n        }\n\n        function logout() {\n          vm.loading = true;\n          $logout(function () {\n            vm.loading = false;\n            vm.dismiss();\n            vm.view1 = true;\n            vm.enabled = true;\n            vm.name = '';\n          });\n        }\n\n        function dismiss() {\n          vm.view1 = false;\n          vm.view2 = false;\n          vm.view3 = false;\n          vm.view4 = false;\n          vm.view5 = false;\n        }\n\n        function $dismiss() {\n          vm.enabled = false;\n        }\n\n        function $login(name, password, callback) {\n          var hash = md5.createHash(password || '');\n          if (name && password) {\n            ref.child(name).child('hash').once('value', function (snapshot) {\n              if (hash === snapshot.val()) {\n                vm.loggedIn = true;\n                vm.name = name;\n                callback();\n              } else {\n                wrongPassword();\n              }\n            });\n          }\n        }\n\n        function wrongPassword() {\n          vm.password = '';\n          vm.wrongPasswordError = true;\n        }\n\n        function $logout(callback) {\n          vm.loggedIn = false;\n          callback();\n        }\n\n        function savePassword() {\n          var newHash;\n          console.log(vm.newPassword);\n          if (vm.newPassword.length > 5) {\n            if (vm.newPassword === vm.repeatPassword) {\n              newHash = md5.createHash(vm.newPassword || '');\n              vm.password = vm.newPassword;\n              vm.loading = true;\n              $savePassword(vm.name, newHash,\n                function (e) {\n                  vm.loading = false;\n                  if (!e) {\n                    login();\n                  } else {\n                    vm.passwordNoSaveError = true;\n                  }\n                }\n              );\n              vm.passwordMatchError = false;\n            } else {\n              vm.passwordMatchError = true;\n            }\n            vm.passwordLengthError = false;\n          } else {\n            vm.passwordLengthError = true;\n          }\n          vm.passwordNoSaveError = false;\n        }\n\n        function $savePassword(name, hash, callback) {\n          ref.child(name).child('hash').set(hash, callback);\n        }\n      },\n      link: function (scope, element, attrs) {\n        /* jshint unused:false */\n        /* eslint \"no-unused-vars\": [2, {\"args\": \"none\"}] */\n      }\n    };\n  }\n}());\n"],"file":"home/login-card-directive.js","sourceRoot":"/source/"}